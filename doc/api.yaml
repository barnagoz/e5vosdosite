openapi: 3.0.3

info:
  title: E5vösDÖ API
  version: "1.0"
  description: |-
    - [The repository](https://github.com/difcsi/e5vosdosite)
  contact:
    name: Zoltán Mészáros
    email: zoltan.m@tuta.io
servers:
  - url: https://e5vosdo.hu/api
tags:
  - name: event
    description: Everything about events
  - name: user
    description: Everything about users
  - name: team
    description: Everything about teams
paths:
  /user:
    description: Returns current user
    get:
      summary: Get current user
      tags:
        - user
      responses:
        "200":
          description: Current user data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: "Current user does not exist"
  /event:
    get:
      summary: Get Event List
      tags:
        - event
      responses:
        '200':
          description: Event list  
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      summary: Create event
      tags:
        - event
      responses:
        '201':
          description: Event created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      security:
        - e5vosdo_auth:
          - write:events
      

  /event/{eventId}:
    parameters:
      - name: eventId
        in: path
        description: ID of event 
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get specific event
      tags:
        - event
      responses:
        '200':
          description: Event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event doesn't exist
    put:
      summary: Update Event
      tags:
        - event
      responses:
        '200':
          description: Event updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '403':
          description: Can't update event
        '404':
          description: Event doesn't exist
    delete:
      summary: Delete event
      tags:
        - event
      responses:
        '200':
          description: Event deleted
        '403':
          description: Can't delete event
        '404':
          description: Event doesn't exist
  /event/{eventId}/attendees:
    description: Event attendance management
    
    get:
      description: Get event attendances
      responses:
        '200':
          description: Event attendances
        '403':
          description: Forbidden
        '404':
          description: Event not found
        
    post:
      description: Create event attendance
      responses:
        '201':
          description: Attendance created
        '403':
          description: Forbidden
        '404':
          description: Event not found

  /team:
    get:
      summary: "Team List"
      tags:
        - team
      responses:
        '200':
          description: Team list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
          
    post:
      summary: "Create team"
      tags:
        - team
      responses:
        '201':
          description: Team created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'

  /team/{teamId}:
    parameters:
      - name: teamId
        in: path
        description: ID of TEAM
        required: true
        schema:
          type: integer
          format: int64 
    get:
      summary: Get team
      tags:
        - team
      responses:
        '200':
          description: Team data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Team not found
    put:
      summary: Update team
      tags:
        - team
      responses:
        '200':
          description: Team updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Team not found
    delete:
      summary: Delete team
      tags:
        - team
      responses:
        '200':
          description: Team deleted
        '404':
          description: Team not found
  
components:
  schemas:
    User:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
          example: 10
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
    Team:
      type: object
      properties:
        code:
          type: string
          example: 4fc213
        name:
          type: string
          example: Sauercloud
    Event:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: StarCraft Verseny
        stub:
          type: string
          example: starcraft_verseny
        description:
          type: string
          nullable: true
        capacity:
          type: string
          format: int64
          nullable: true
        signup_type:
          type: string
          enum: ["individual", "team"]
          nullable: true
        signup_deadline:
          type: string
          nullable: true
        starts_at:
          type: string
          nullable: true
        ends_at:
          type: string
          nullable: true
    Slot:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: 1. előadássáv
        is_presentation:
          type: boolean
        starts_at:
          type: string
          nullable: true
        ends_at:
          type: string
          nullable: true
    Location:
      type: object
      properties:
        name:
          type: string
        floor:
          type: string
          enum: [0, 1, 2, 3]
  securitySchemes:
    e5vosdo_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://e5vosdo.hu/oauth/authorize
          scopes:
            write:events: Modify events
